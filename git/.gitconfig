[alias]
	# Amend the currently staged files to the latest commit.
	amend = commit --amend --reuse-message=HEAD

	# Commit all changes.
	ca = !git add -A && git commit -av

	# Show the diff between the latest commit and the current state.
	d = !"git diff-index --quiet HEAD -- || clear; git --no-pager diff --patch-with-stat"

	# Remove branches that have already been merged with main.
	# a.k.a. ‘delete merged’
	delmergedc = "!git branch --merged | grep -v '\\*' | xargs -n 1 git branch -d"

	# Log
	log = log --pretty=oneline -n 20 --graph --abbrev-commit

	# Interactive rebase with the given number of latest commits.
	reb = "!r() { git rebase -i HEAD~$1; }; r"

	# Remove the old tag with this name and tag the latest commit with it.
	retag = "!r() { git tag -d $1 && git push origin :refs/tags/$1 && git tag $1; }; r"

	# Update the content of the last commit by including all staged changes.
    u = commit --amend --no-edit

	# Update the content of the last commit by including all local changes.
    ua = !git add --all && git commit --amend --no-edit


[branch]
	# Show most recently changed branches first.
	sort = -committerdate


[core]
	# Use custom `.gitignore`
	excludesfile = ~/.gitignore_global

	# Make `git rebase` safer on macOS.
	# More info: <http://www.git-tower.com/blog/make-git-rebase-safe-on-osx/>
	trustctime = false

	# Prevent showing files whose names contain non-ASCII symbols as unversioned.
	# http://michael-kuehnel.de/git/2014/11/21/git-mac-osx-and-german-umlaute.html
	precomposeunicode = false

	# Speed up commands involving untracked files such as `git status`.
	# https://git-scm.com/docs/git-update-index#_untracked_cache
	untrackedCache = true


[color]
	# Use colors in Git commands that are capable of colored output when
	# outputting to the terminal. (This is the default setting in Git ≥ 1.8.4.)
	ui = auto


[color "branch"]
	current = yellow reverse
	local = yellow
	remote = green


[color "diff"]
	meta = yellow bold
	frag = magenta bold # line info
	old = red # deletions
	new = green # additions


[color "status"]
	added = yellow
	changed = green
	untracked = cyan


[diff]
	# Detect copies as well as renames.
	renames = copies


[diff "bin"]
	# Use `hexdump` to diff binary files.
	textconv = hexdump -v -C


[help]
	# Automatically correct and execute mistyped commands.
	autocorrect = 1


[push]
	# https://git-scm.com/docs/git-config#git-config-pushdefault
	default = simple
	# Make `git push` push relevant annotated tags when pushing branches out.
	followTags = true


# URL shorthands
[url "git@github.com:"]
	insteadOf = "gh:"
	pushInsteadOf = "github:"
	pushInsteadOf = "git://github.com/"

[url "git://github.com/"]
	insteadOf = "github:"

[url "git@gist.github.com:"]
	insteadOf = "gst:"
	pushInsteadOf = "gist:"
	pushInsteadOf = "git://gist.github.com/"

[url "git://gist.github.com/"]
	insteadOf = "gist:"


[user]
    # Do not guess the user's identity.
    # https://github.com/git/git/blob/90f7b16b3adc78d4bbabbd426fb69aa78c714f71/Documentation/config.txt#L2847-L2855
    useConfigOnly = true


[init]
	defaultBranch = main


[include]
	path = ~/.gitconfig.user

    # Load local configs.
    # https://git-scm.com/docs/git-config#_includes
    #
    # [!] The following needs to remain at the end of this file in
    #     order to allow any of the above configs to be overwritten
    #     by the local ones
    path = ~/.gitconfig.local